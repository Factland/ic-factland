type Profile = record {
  updated_time_msecs: opt nat64;
  username: opt text;
  password: opt text;
  email: opt text;
};

service factland: {
  register:  (Profile) -> (Profile);
  login:  () -> (Profile) query;
  set_profile: (Profile) -> (Profile);
  //
  // Backup/restore map from principal (in text) to Profile(s).
  //
  backup: () -> (vec record { text; Profile }) query;
  restore: (vec record { text; Profile }) -> ();
  // Raw backup/restore interface.
  stable_size : () -> (nat64);
  stable_read : (nat64, nat64) -> (vec nat8);
  stable_write : (nat64, vec nat8) -> ();
  //
  // Manage the set of Principals allowed to backup/restore.
  //
  authorize: (principal) -> ();
  deauthorize: (principal) -> ();
  get_authorized: () -> (vec principal) query;
}
